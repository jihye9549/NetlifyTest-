{"ast":null,"code":"var _jsxFileName = \"/Users/jihye/Desktop/5th_UMC_WEB/jenna/ch3/src/pages/LoginPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport * as S from '../components/Login/Login.style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginPage() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailCheck, setEmailCheck] = useState(true);\n  const emailRegex = /([\\w-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n  const handleInputChange = e => {\n    const InputValue = e.target.value;\n    const InputName = e.target.name;\n    if (InputName === 'email') {\n      setEmail(InputValue);\n      if (!emailRegex.test(InputValue)) {\n        setEmailCheck(false);\n      } else {\n        setEmailCheck(true);\n      }\n    } else {\n      setPassword(InputValue);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(S.Wrap, {\n    children: [/*#__PURE__*/_jsxDEV(S.Title, {\n      children: \"\\uC774\\uBA54\\uC77C\\uACFC \\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.LoginForm, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(S.InputLabel, {\n        htmlFor: \"email\",\n        children: [\"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\", /*#__PURE__*/_jsxDEV(S.LoginInput, {\n          name: \"email\",\n          type: \"text\",\n          value: email,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), !emailCheck && /*#__PURE__*/_jsxDEV(S.EmailCheck, {\n        children: \"\\uC62C\\uBC14\\uB978 \\uC774\\uBA54\\uC77C\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.InputLabel, {\n        htmlFor: \"password\",\n        children: [\"\\uBE44\\uBC00\\uBC88\\uD638\", /*#__PURE__*/_jsxDEV(S.LoginInput, {\n          name: \"password\",\n          type: \"password\",\n          value: password,\n          onChange: handleInputChange,\n          placeholder: \"\\uC601\\uBB38,\\uC22B\\uC790, \\uD2B9\\uC218\\uBB38\\uC790 \\uD3EC\\uD568 8\\uC790 \\uC774\\uC0C1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.SubmitBtn, {\n        type: \"button\",\n        disabled: !(emailCheck && email !== '' && password !== ''),\n        children: \"\\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"DcnmXSLLuT/JWOnS4skrLc/gPQw=\");\n_c = LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","S","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","password","setPassword","emailCheck","setEmailCheck","emailRegex","handleSubmit","e","preventDefault","handleInputChange","InputValue","target","value","InputName","name","test","Wrap","children","Title","fileName","_jsxFileName","lineNumber","columnNumber","LoginForm","onSubmit","InputLabel","htmlFor","LoginInput","type","onChange","EmailCheck","placeholder","SubmitBtn","disabled","_c","$RefreshReg$"],"sources":["/Users/jihye/Desktop/5th_UMC_WEB/jenna/ch3/src/pages/LoginPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport * as S from '../components/Login/Login.style';\n\nexport default function LoginPage() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailCheck, setEmailCheck] = useState(true);\n\n  const emailRegex =\n    /([\\w-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n  };\n  const handleInputChange = (e) => {\n    const InputValue = e.target.value;\n    const InputName = e.target.name;\n\n    if (InputName === 'email') {\n      setEmail(InputValue);\n      if (!emailRegex.test(InputValue)) {\n        setEmailCheck(false);\n      } else {\n        setEmailCheck(true);\n      }\n    } else {\n      setPassword(InputValue);\n    }\n  };\n\n  return (\n    <S.Wrap>\n      <S.Title>이메일과 비밀번호를 입력해주세요</S.Title>\n      <S.LoginForm onSubmit={handleSubmit}>\n        <S.InputLabel htmlFor=\"email\">\n          이메일 주소\n          <S.LoginInput\n            name=\"email\"\n            type=\"text\"\n            value={email}\n            onChange={handleInputChange}\n          />\n        </S.InputLabel>\n        {!emailCheck && (\n          <S.EmailCheck>올바른 이메일을 입력해주세요.</S.EmailCheck>\n        )}\n\n        <br />\n        <S.InputLabel htmlFor=\"password\">\n          비밀번호\n          <S.LoginInput\n            name=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={handleInputChange}\n            placeholder=\"영문,숫자, 특수문자 포함 8자 이상\"\n          />\n        </S.InputLabel>\n        <S.SubmitBtn\n          type=\"button\"\n          disabled={!(emailCheck && email !== '' && password !== '')}\n        >\n          확인\n        </S.SubmitBtn>\n      </S.LoginForm>\n    </S.Wrap>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}