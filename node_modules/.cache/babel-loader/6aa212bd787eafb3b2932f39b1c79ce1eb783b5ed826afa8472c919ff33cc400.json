{"ast":null,"code":"var _jsxFileName = \"/Users/jihye/Desktop/5th_UMC_WEB/jenna/ch3/src/pages/LoginPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginPage() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailCheck, setEmailCheck] = useState('');\n  const emailRegex = /([\\w-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\n  const handleInputChange = e => {\n    const InputValue = e.target.value;\n    const InputName = e.target.name;\n\n    // eslint-disable-next-line no-unused-expressions\n\n    if (InputName === 'email') {\n      setEmail(InputValue);\n    } else {\n      setPassword(InputValue);\n    }\n  };\n  const onChangeEmail = useCallback(e => {\n    const emailRegex = /([\\w-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\n    const emailCurrent = e.target.value;\n    setEmail(emailCurrent);\n    if (!emailRegex.test(emailCurrent)) {\n      setEmailMessage('이메일 형식이 틀렸어요! 다시 확인해주세요 ㅜ ㅜ');\n      setIsEmail(false);\n    } else {\n      setEmailMessage('올바른 이메일 형식이에요 : )');\n      setIsEmail(true);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC774\\uBA54\\uC77C\\uACFC \\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: [\"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"email\",\n          type: \"text\",\n          value: email,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: [\"\\uBE44\\uBC00\\uBC88\\uD638\", /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"password\",\n          type: \"password\",\n          value: password,\n          onChange: handleInputChange,\n          placeholder: \"\\uC601\\uBB38,\\uC22B\\uC790, \\uD2B9\\uC218\\uBB38\\uC790 \\uD3EC\\uD568 8\\uC790 \\uC774\\uC0C1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        children: \"\\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"Zj+SR22OTKb4W0eIZ3vMyUT1ux4=\");\n_c = LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","password","setPassword","emailCheck","setEmailCheck","emailRegex","handleInputChange","e","InputValue","target","value","InputName","name","onChangeEmail","useCallback","emailCurrent","test","setEmailMessage","setIsEmail","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["/Users/jihye/Desktop/5th_UMC_WEB/jenna/ch3/src/pages/LoginPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nexport default function LoginPage() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailCheck, setEmailCheck] = useState('');\n\n\n  const emailRegex =\n  /([\\w-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/\n\n\n\n  const handleInputChange = (e) => {\n    const InputValue = e.target.value;\n    const InputName = e.target.name;\n\n    // eslint-disable-next-line no-unused-expressions\n\n    if(InputName === 'email')\n    {setEmail(InputValue)}else{setPassword(InputValue);}\n  \n  };\n  \n\n  const onChangeEmail = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const emailRegex =\n      /([\\w-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/\n    const emailCurrent = e.target.value\n    setEmail(emailCurrent)\n\n    if (!emailRegex.test(emailCurrent)) {\n      setEmailMessage('이메일 형식이 틀렸어요! 다시 확인해주세요 ㅜ ㅜ')\n      setIsEmail(false)\n    } else {\n      setEmailMessage('올바른 이메일 형식이에요 : )')\n      setIsEmail(true)\n    }\n  }, [])\n\n\n\n\n\n\n  return (\n    <div>\n      <h1>이메일과 비밀번호를 입력해주세요</h1>\n      <form>\n        <label htmlFor=\"email\">\n          이메일 주소\n          <input\n            name=\"email\"\n            type=\"text\"\n            value={email}\n            onChange={handleInputChange}\n          />\n        </label>\n\n        <br />\n        <label htmlFor=\"password\">\n          비밀번호\n          <input\n            name=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={handleInputChange}\n            placeholder=\"영문,숫자, 특수문자 포함 8자 이상\"\n          />\n        </label>\n        <button type=\"button\">확인</button>\n      </form>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}